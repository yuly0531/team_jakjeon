<!-- JSP 기술의 한 종류인 [Page Directive]를 이용하여 현 JSP 페이지 처리 방식 선언하기 -->

   <!-- 현재 이 JSP 페이지 실행 후 생성되는 문서는 HTML 이고,이 문서 안의 데이터는 UTF-8 방식으로 인코딩한다 라고 설정함 -->
   <!-- 현재 이 JSP 페이지를 저장할때는 UTF-8 방식으로 인코딩 한다 -->
   <!-- 모든 JSP 페이지 상단에 무조건 아래 설정이 들어간다. -->
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ page import="java.util.*" %>
<%@taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
    
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>게시판</title>


<!-- CSS설정하기 -->
<style>

	/****************************************/
	/* body 태그 안의 모든 태그를 15px로 하기 */
	/****************************************/
	body *{
		font-size:15px;
	}
	/****************************************/
	/* th 태그 안의 배경색을 lightgray로 하기 */
	/****************************************/
	th{
		background-color:lightgray;
	}
	/****************************************/
	/* class=searchResult를 가진 태그의 후손중에
		tr중에 2n+3번째 tr의 배경색을 #f6f6f6으로 하기
		이때 n은 0부터 시작해서 1씩 증가 */
	/****************************************/
	.searchResult tr:nth-child(2n+3){
		background-color:#f6f6f6;
	}
</style>

<script src="/js/jquery-1.11.0.min.js" ></script>
<script src="/js/common.js" ></script>

<script>
   // body 태그 안의 모든 내용을 읽어들인 후 init 함수 호출
   $(function(){
      init();
   })
   // body 태그 안의 모든 내용을 읽어들인 후 호출한 JavaScript 코딩 설정
   function init(){
	   
   }
   
   function xxx(){
	   
	   //$(".searchResult").find("tr th").eq(4).text("등록일▲")
	   // <input type="hidden" name="sub" value="reg_date">
   		
	   search();
	  
   }
   
   //mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
   //[페이지 번호] 클릭하면 호출되는 함수 clickPageNo 선언
   //mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
   function pageNoClick(
		   clickPageNo //클릭한 번호가 들어오는 매개변수
	){ 
	   	//변수 formObj선언하고 name='boardSearchForm' 를 가진 form태그 관리 JQuery객체 저장
		var formObj = $("[name='boardSearchForm']")
		//name='selectPageNo'를 가진 태가 value값에 매개변수로 들어오는 [클릭한 페이지] 번호 저장
		//즉 <input type="hidden" name="selectPageNo" value="1"> 태그에 
		//		value값에  [클릭한 페이지 번호]를 저장하기.
		formObj.find("[name='selectPageNo']").val(clickPageNo);
	   	//search함수 호출하기.
	   	search();
    }
   //mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
   //검색 버튼 누르면 호출 되는 함수 search 선언.
    //mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
   /*  작동방식 : search 함수를 누르면 모든 입력 양식 태그의 정보를 가지고  
    "/boardList.do" 명령어에 해당되는 html 문서를 가지고와 function(responseHtml)함수 내용처럼 갱신후 완성된 jsp문서를 결과로 보여준다.!!! */
   function search(){
	  
    	alert( $("[name='boardSearchForm']"));
	   //-----------------------------------------------------------
	   //WAS와 비동기 방식으로 "/boardList.do" 접속하고 얻은 
	   //HTML문서에서 필요한 데이터를 캐치해서 현 화면에 반영하기
		ajax(
            // WAS에 접속할 때 사용할 URL 주소 지정
            "/boardList.do"
            
            // WAS에 전송할 파라미터값을 보내는 방법 지정
            ,"post"
            
            // 파라미터값을 내포한 form 태그를 관리하는 JQuery 객체의 메모리 위치 주소값
            ,$("[name='boardSearchForm']")
            
            // WAS와 통신한 후 WAS의 응답을 성공적으로 받았을 경우 실행할 익명함수 설정
            // 익명함수의 매개변수에는 WAS가 보내온 HTML 문자열이 들어온다. 
            ,function(responseHtml){
            	
            	//매개변수로 들어오는 HTML문자열을 관리하는 JQuery객체 생성하여 저장하기.
               var obj = $(responseHtml);
            	//JQuery객체가 관리하는 HTML태그 문자열에서 
            	//class='searchResultCnt' 가진 태그 내부 문자열을 얻어 변수 searchResultCnt에 저장.
               var searchResultCnt = obj.find(".searchResultCnt").html();
           		//JQuery객체가 관리하는 HTML태그 문자열에서 
           		//class='searchResult' 가진 태그 내부 문자열을 얻어 변수 searchResult에 저장.
               var searchResult = obj.find(".searchResult").html();
             	//JQuery객체가 관리하는 HTML태그 문자열에서 
          		//class='pageNos' 가진 태그 내부 문자열을 얻어 변수 pageNos에 저장.
               var pageNos = obj.find(".pageNos").html();
             	
             	
               //$(".xxx").val($(".searchResult").find("tr th").eq(4).html())
             	//----------------------------------------------------
             		//var ppp = obj.find($("[name='reg_date']").html();
             	
             	
               if($("[name='reg_date']").val()=="desc"){
      			 $("[name='reg_date']").val("asc")
      			 //$(".searchResult").find("tr th").eq(4).text("등록일▲")
      			 }
      		 
      		   if($("[name='reg_date']").val()=="acs"){
      			 $("[name='reg_date']").val("desc")
      			 //$(".searchResult").find("tr th").eq(4).text("등록일▼");
      			}
             	//----------------------------------------------------
             	
             	
             	
             	//class='searchResultCnt' 를 가진 태그 내부에
             	//JQuery객체가 관리하는 태그 문자열에서 class='serachResultCnt'가진 태그 내부 데이터 덮어쓰기
               $(".searchResultCnt").html(searchResultCnt);
             //class='searchResultCnt' 를 가진 태그 내부에
            	//JQuery객체가 관리하는 태그 문자열에서 class='serachResultCnt'가진 태그 내부 데이터 덮어쓰기
               $(".searchResult").html(searchResult);
             //class='searchResultCnt' 를 가진 태그 내부에
            	//JQuery객체가 관리하는 태그 문자열에서 class='serachResultCnt'가진 태그 내부 데이터 덮어쓰기
               $(".pageNos").html(pageNos);
             
               
             	//------------------------------------------------------------------------------
        	   //비동기 방식이여서 이 함수가 끝나고 다음 코드가 실행되지 않음.. 이 함수가 끝나고 실행시킬 코드를 원하는 경우
        	   //이 함수 맨 아래에 사용해야 한다.
        	   //------------------------------------------------------------------------------
            }
		);
		
	   
   }
      
      
</script>

</head>
<body>
	   <textarea cols=100 rows=100 class=xxx></textarea> 
   <center>
   <form name="boardSearchForm">
   
      	<!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm -->
   		<!-- 게시판 검색조건 관련 태그 선언. -->
   		<!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm -->
	   <table border="1" cellpadding="5" cellspacing="0" style="border-collapse:collapse"  bordercolor="#000000" align="center">
	      <tr>
	         <td>키워드</td>
	         <td>
	         
	         	<!-- ------------------------------------ -->
	         	<!-- 키워드 검색 단어를 입력하는 입력 양식 태그 선언. -->
	            <input type="text" name="keyword1">
	            <!-- ------------------------------------ -->
	            <select name="orand" >
	            	<option value="or">or
			  		<option value="and">and
			  		
			   </select>
			   <input type="text" name="keyword2">
			   
				<input type="checkbox" name="date" value="+0">오늘
				<input type="checkbox" name="date" value="-1">어제
			
				
	         </td>
	      </tr>
	   </table>
   <div style="height:10px"></div>
   
   <!-- ------------------------------------ -->
   <!-- 선택한 페이지 번호가 저장되는 입력양식 태그 선언 -->
   <input type="hidden" name="selectPageNo" value="1">
   <!-- ------------------------------------ -->
   <input type="text" name="reg_date" value="desc">
   
   <input type="button" value="검색" onclick="search()">
   <span style="cursor:pointer"  onclick="location.replace('/loginForm.do')">[로그인화면]</span><br>
   
   <!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm -->
   <!-- 게시판 검색 결과 개수,  게시판 총 개수 출력하기 -->
   <!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm -->
   <span class="searchResultCnt">
   		[검색개수] : ${requestScope.boardMap.boardListCnt } / ${requestScope.boardMap.boardListCntAll}
   		
   			<%-- 
   				--------------------------------------------
   				${requestScope.boardMap.boardListCnt }
   				-------------------------------------------
   					HttpServletRequest객체에 "boardMap"이라는 키값으로 저장된 놈이 HashMap객체인데
   					이 HashMap객체 안에 "boardListCnt"라는 키값으로 저장된놈을 EL문법으로표현하기 
   					<주의> ModelAndView 객체에 저장된 놈은 HttpServletRequest객체에 저장된다.

   				--------------------------------------------
   				${requestScope.boardMap.boardListCntAll}
   				-------------------------------------------
   					HttpServletRequest객체에 "boardMap"이라는 키값으로 저장된 놈이 HashMap객체인데
   					이 HashMap객체 안에 "boardListCntAll"라는 키값으로 저장된놈을 EL문법으로표현하기 
   					<주의> ModelAndView 객체에 저장된 놈은 HttpServletRequest객체에 저장된다.
   					
   			--%>
   		
   </span>
   <!-- 보이는 행의 개수 -->
   <select name="rowCntPerPage" onChange="search()">
  		<option value="10">10
  		<option value="15">15
  		<option value="20">20
   </select>행보기
   <div style="height:10px"></div>
   
   <!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm -->
   <!-- 게시판 검색 결과물 출력 -->
   <!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm -->
   <div class="searchResult">
		
		<table border="0" cellpadding="5" cellspacing=0 style="border-collapse: collapse" align="center">
		<tr onclick="xxx()">
			<th>번호
			<th>제목
			<th>작성자
			<th>조회수
			<th>등록일</th>
		</tr>
		<!-- ******************************************************************** -->
		<!-- EL문법과 커스텀 태그의 일종인 C코어 태그를 사용하여
		HttpServletRequest객체에 "boardMap"이라는 키값으로 저장된 놈을 꺼내면 HashMap객체인데
		이 HashMap객체에서 "boardList" 키값으로 저장된 놈을 꺼내면 List<map>객체인데
		이 ArrayList객체 안에 저장된 HashMap객체를 하나씩 꺼내서 지역변수 "board"에 담고
		반복문 안으로 들어간다.
		반복문 안에서는 board에 저장된 HashMap객체에 저장된 데이터를 꺼낼 때 .....달러{지역변수명.키값}으로 쓴다.
		 -->
		<!-- ******************************************************************** -->
		
	
<%--	<%
			Map<String,Object> boardMap = (Map<String,Object>)request.getAttribute("boardMap");
			List<Map<String,String>> boardList = (List<Map<String,String>>)boardMap.get("boardList");
			int begin_serialNo_desc = (int)boardMap.get("begin_serialNo_desc");
			for(int i = 0 ; i<boardList.size() ; i++){
				Map<String,String> board = boardList.get(i);
				out.print("<tr>");
				out.print("<td>" + (begin_serialNo_desc-i) + "</td>");
				out.print("<td>" + board.get("subject") + "</td>");
				out.print("<td>" + board.get("writer") + "</td>");
				out.print("<td>" + board.get("readcount") + "</td>");
				out.print("<td>" + board.get("reg_date") + "</td>");
				
			}
		%> 				--%>
		<!-- JSP에서 request에는 HttpServletRequest가 들어있다 response도 마찬가지 -->
		<!-- 위 자바 코드는 아래 EL문법을 이용한 코드와 같다. -->
		
		<!-- varStatus="vs"		vs에는 지역변수이고 이 안에는 반복문 관리객체가 들어있다. -->
			<!-- 반복문 관리 객체의 index라는 속성변수에는 0부터 시작하는 인덱스 번호가 들어 있다. -->
<!-- 
		[반복문 c코어태그] 내부의 속성 설명
			items="달러{EL로 표현되는 ArrayList객체 또는 배열 객체}"
			var="반복문 안에서 사용되는 지역변수"
					->EL로 표현되는 ArrayList객체 또는 배열 객체안의 i번째 데이터가 저장된다.
			varStatus="vs"		vs에는 지역변수이고 이 안에는 반복문 관리객체가 들어있다.	
					 반복문 관리 객체의 index라는 속성변수에는 0부터 시작하는 인덱스 번호가 들어 있다.
					 <참고> 반복문 관리 객체의 count라는 속성변수에는 1부터 시작하는 순서번호가 저장되어 있다.
					 			count라는 속성변수안의 데이터를 표현할 때는 달러{vs.count}로 표현한다.
					 			
			---------------------------------------------------------------------------
			begin="시작번호"		end="끝번호"
			---------------------------------------------------------------------------
				시작번호부터 시작해서 1씩 증가하면서 끝 번호까지 반복문이 돈다.
				이 번호들은	 var오른쪽"반복문 안에서 사용되는 지역변수"에 저장되어 반복문 안으로 들어간다.	
				<참고> items가 나오면 보통 begin이나 end가 안나온다.			 			
-->
		
		<c:forEach var="board" items="${requestScope.boardMap.boardList}" varStatus="vs">
			<tr>
				<td>${requestScope.boardMap.begin_serialNo_desc-vs.index}</td>
				<td>${board.subject}</td>
				<td>${board.writer}</td>
				<td>${board.readcount}</td>
				<td>${board.reg_date}</td>
			</tr>
		</c:forEach>
	</table>
   </div>
    <div style="height:10px"></div>
   <!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm -->
   <!-- 게시판 페이징 번호 출력하기 -->
   <!-- mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm -->
    <div class="pageNos">
    
    
    	
    	<!-- [처음] [이전] 출력 -->
    	<span style="cursor:pointer" onClick="pageNoClick(1)">[처음]</span>
    	<span style="cursor:pointer" onClick="pageNoClick(${requestScope.boardMap.selectPageNo}-1)">[이전]</span>&nbsp;&nbsp;
    	
    	
    	<!-- [반복문 C코어 태그]를 사용하여 페이지 번호 출력하기 -->
    	<c:forEach var="pageNo" begin="${requestScope.boardMap.begin_pageNo }" end="${requestScope.boardMap.end_pageNo}">
    	
    			<!-- 만약 선택한 페이지 번호와 화면에 출력할 페이지 번호가 같으면 -->
    			<c:if test="${requestScope.boardMap.selectPageNo==pageNo}">
    				${pageNo}
    			</c:if>
    			
    			<!-- 만약 선택한 페이지 번호와 화면에 출력할 페이지 번호가 다르면 -->
    			<c:if test="${requestScope.boardMap.selectPageNo!=pageNo}">
    				<span style="cursor:pointer" onClick="pageNoClick(${pageNo})">[${pageNo}]</span>
    			</c:if>
    	</c:forEach>
    	
    	<span style="cursor:pointer" onClick="pageNoClick(${requestScope.boardMap.selectPageNo}+1)">[다음]</span>
    	<span style="cursor:pointer" onClick="pageNoClick(${requestScope.boardMap.last_pageNo})">[마지막]</span>
    			
    
    </div>
   
   
   
   </form><br>
   </center>
</body>
</html>


<!-- hidden태그를 쓰는 이유
			화면으로 보이고 싶진 않지만 WAS쪽으로 전송하고 싶은 데이터가 존재할때.
 -->
